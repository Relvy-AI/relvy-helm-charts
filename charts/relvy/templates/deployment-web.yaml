{{- if .Values.web.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "relvy.fullname" . }}-web
  labels:
    {{- include "relvy.labels" . | nindent 4 }}
    app.kubernetes.io/component: web
spec:
  replicas: {{ .Values.web.replicas }}
  selector:
    matchLabels:
      {{- include "relvy.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: web
  template:
    metadata:
      labels:
        {{- include "relvy.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: web
    spec:
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
      {{- end }}
      containers:
      - name: web
        image: {{ include "relvy.image" . }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        command: ["sh", "-c"]
        args: ["gunicorn --access-logfile - --error-logfile - --bind :{{ .Values.web.service.targetPort }} --workers 1 --threads 8 --timeout 0 'resolveml:create_app()'"]
        ports:
        - containerPort: {{ .Values.web.service.targetPort }}
          name: http
        env:
        - name: ENVIRONMENT
          value: {{ .Values.config.environment | quote }}
        - name: FLASK_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.flask }}
              key: key
          value: {{ .Values.config.flaskSecretKey | quote }}
        - name: SERVER_HOSTNAME
          value: {{ .Values.config.serverHostname | quote }}
        - name: DB_HOST
          value: {{ .Values.database.endpoint	 | quote }}
        - name: DB_PORT
          value: {{ .Values.database.port | quote }}
        - name: DB_NAME
          value: {{ .Values.database.name | quote }}
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.database }}
              key: username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.database }}
              key: password
        - name: REDIS_URL
          value: {{ include "relvy.redisUrl" . | quote }}
        - name: PYTHONPATH
          value: "/app"
        - name: PORT
          value: {{ .Values.config.port | quote }}
        - name: LANGFUSE_PUBLIC_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.langfuse }}
              key: public_key
              optional: true
        - name: LANGFUSE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.langfuse }}
              key: secret_key
              optional: true
        - name: LANGFUSE_HOST
          value: "http://langfuse-web.langfuse.svc.cluster.local:3000"
        - name: LANGFUSE_TRACING_ENVIRONMENT
          value: "production"
        - name: LANGFUSE_OBSERVE_DECORATOR_IO_CAPTURE_ENABLED
          value: "false"
        - name: ENABLE_SLACK_SOCKET_MODE
          value: "true"
        - name: GITHUB_APP_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.github }}
              key: private_key
              optional: true
        - name: GITHUB_APP_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.github }}
              key: client_id
              optional: true
        resources:
          {{- toYaml .Values.web.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
{{- end }}
